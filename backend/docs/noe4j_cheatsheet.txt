// https://neo4j.com/docs/cypher-refcard/current/
// https://neo4j.com/docs/graph-data-science/current/algorithms/similarity/

// Add new
CREATE (user:User {name:"Erkid"})-[r:RATES]->(movie:Movie {name:"Sdd"})
RETURN user, movie, r

// Filter
MATCH (user:User)
WHERE user.name = "Erkid"
RETURN * // or RETURN user

// Filter without variable only with Label
MATCH (Emil {name: "Emil Eifrem"})
RETURN Emil

// Filter with relationships
MATCH (user:User)-[:RATES]-(movies)
RETURN user, movies

// Filter all nodes and their relationships
Match (n)-[r]->(m)
Return n,r,m


// Types of relationships
(m)-[r]-(n)  // both sides
(m)-[r]->(n)  // right sides
(m)<-[r]-(n)  // left sides

// Filter by WHERE, OR/AND and DISTINCT
MATCH (item:Item)
WHERE item.category="clothes" AND item.name="T-shirt"
RETURN DISTINCT item

// Finding nodes of nodes (other people that surf) with limit
MATCH (js:Person)-[:KNOWS]-()-[:KNOWS]-(surfer)
WHERE js.name = "Johan" AND surfer.hobby = "surfing"
RETURN DISTINCT surfer
LIMIT 10