### Scalars
scalar EmailAddress

### Directives
directive @isAdmin on FIELD_DEFINITION

############################################################################################
#### Connection Types
############################################################################################
type UsersConnection {
    results: [User!]
    pageInfo: PageInfo!
}

type JobsConnection {
    results: [Job!]
    pageInfo: PageInfo!
}

type RecipesConnection {
    results: [Recipe!]
    pageInfo: PageInfo!
}
############################################################################################
#### Inputs
############################################################################################


############################################################################################
#### General Types
############################################################################################
type Job {
    id: Int!
    title: String!
    company: String!
}


type User {
    id: Int!
    name: String!
    email: EmailAddress!
    role: String! ## TODO: add role type
    recipes: [Recipe!]!
}

## current authenticated user
type Viewer {
    id: Int
    role: String
}

type Recipe {
    id: Int!
    title: String!
    ingredients: String!
    direction: String!
    user: User!
}

type PageInfo {
    currentPage: Int!
    perPage: Int!
    itemCount: Int!
    pageCount: Int!
    hasPreviousPage: Boolean!
    hasNextPage: Boolean!
}

type AuthPayload {
    token: String!
    user: User!
}
############################################################################################
#### Queries
############################################################################################
type Query {
    user(id: Int!): User! @isAdmin
    viewer: Viewer!
    allUsers(page:Int, pageSize:Int): UsersConnection!  @isAdmin
    allJobs(page:Int, pageSize:Int): JobsConnection!
    job(id: Int!): Job! @isAdmin
    allRecipes(page:Int, pageSize:Int): RecipesConnection! @isAdmin
    recipe(id: Int!): Recipe!  @isAdmin
}

############################################################################################
#### Mutations
############################################################################################
type Mutation {
    createUser(name: String!, email: EmailAddress!, password: String!): User! @isAdmin
    createRecipe(
        userId: Int!
        title: String!
        ingredients: String!
        direction: String!
    ): Recipe! @isAdmin

    login(email: EmailAddress!, password: String!): AuthPayload!
    signup(email: EmailAddress!, password: String!, name: String!): AuthPayload!

}
